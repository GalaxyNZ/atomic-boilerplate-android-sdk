plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}


// this is where you could store you atomic API values
def atomicApiPropertiesFile = rootProject.file("apikey.properties")
def atomicApiProperties = new Properties()
atomicApiProperties.load(new FileInputStream(atomicApiPropertiesFile))

android {
    compileSdk 32

    defaultConfig {
        applicationId "io.atomic.android_boilerplate"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "API_KEY", atomicApiProperties["API_KEY"])
        buildConfigField("String", "API_HOST", atomicApiProperties["API_HOST"])
        buildConfigField("String", "API_ENVIRONMENT_ID", atomicApiProperties["API_ENVIRONMENT_ID"])
        buildConfigField("String", "API_CONTAINER_ID", atomicApiProperties["API_CONTAINER_ID"])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation "io.atomic.actioncards:aacsdk:$atomicSdkVersion"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}